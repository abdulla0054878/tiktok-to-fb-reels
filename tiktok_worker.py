import os
import subprocess
import schedule
import time
import json

# ЁЯФС Load ENV variables
TIKTOK_PROFILE = os.getenv("TIKTOK_PROFILE")
CHECK_INTERVAL = int(os.getenv("CRON_INTERVAL_MINUTES", 5))
FB_PAGE = os.getenv("FB_PAGE_LINK")

DOWNLOAD_DIR = "downloads"
LOG_FILE = "processed.json"

os.makedirs(DOWNLOAD_DIR, exist_ok=True)

# ржкрзБрж░ржирзЛ ржнрж┐ржбрж┐ржУ ржЯрзНрж░рзНржпрж╛ржХ
if os.path.exists(LOG_FILE):
    with open(LOG_FILE, "r") as f:
        processed = set(json.load(f))
else:
    processed = set()

def check_new_videos():
    global processed
    print("тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ")
    print(f"ЁЯФН TikTok ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЪрзЗржХ рж╣ржЪрзНржЫрзЗ: {TIKTOK_PROFILE}")
    print(f"тЮбя╕П ржЖржкрж▓рзЛржб рж╣ржмрзЗ Facebook ржкрзЗржЬрзЗ: {FB_PAGE}")

    # ржнрж┐ржбрж┐ржУ рж▓рж┐рж╕рзНржЯ ржЖржирж╛
    cmd = ["yt-dlp", "--dump-json", "--flat-playlist", TIKTOK_PROFILE]
    result = subprocess.run(cmd, capture_output=True, text=True)
    if result.returncode != 0:
        print("тЭМ TikTok ржерзЗржХрзЗ ржнрж┐ржбрж┐ржУ ржлрзЗржЪ ржмрзНржпрж░рзНрже рж╣рзЯрзЗржЫрзЗред")
        return

    new_videos_found = False
    for line in result.stdout.strip().split("\n"):
        data = json.loads(line)
        video_id = data.get("id")
        title = data.get("title") or "TikTok Video"

        if video_id and video_id not in processed:
            new_videos_found = True
            print(f"ЁЯЖХ ржирждрзБржи ржнрж┐ржбрж┐ржУ ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ: {title} (ID: {video_id})")

            # ржбрж╛ржЙржирж▓рзЛржб
            print("тмЗя╕П ржнрж┐ржбрж┐ржУ ржбрж╛ржЙржирж▓рзЛржб рж╣ржЪрзНржЫрзЗ...")
            dl_cmd = [
                "yt-dlp", "-o", f"{DOWNLOAD_DIR}/%(id)s.%(ext)s",
                f"https://www.tiktok.com/@{data['uploader']}/video/{video_id}"
            ]
            subprocess.run(dl_cmd)

            video_path = None
            for ext in ["mp4", "webm", "mkv"]:
                try_file = f"{DOWNLOAD_DIR}/{video_id}.{ext}"
                if os.path.exists(try_file):
                    video_path = try_file
                    break

            if video_path:
                print(f"ЁЯУд Facebook ржЖржкрж▓рзЛржб рж╢рзБрж░рзБ: {FB_PAGE}")
                subprocess.run([
                    "node", "fb_reels_uploader.js",
                    "--file", video_path,
                    "--title", title
                ])
                processed.add(video_id)
                print(f"тЬЕ ржЖржкрж▓рзЛржб рж╕ржорзНржкржирзНржи: {title}")

    if new_videos_found:
        with open(LOG_FILE, "w") as f:
            json.dump(list(processed), f, indent=2)
    else:
        print("тД╣я╕П ржирждрзБржи ржХрзЛржирзЛ ржнрж┐ржбрж┐ржУ ржирзЗржЗред")

# ЁЯУМ ржкрзНрж░ржержоржмрж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗ рж░рж╛ржи ржХрж░ржмрзЗ
check_new_videos()

# тП░ рждрж╛рж░ржкрж░ рж╕рж┐ржбрж┐ржЙрж▓ ржЕржирзБржпрж╛рзЯрзА ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржорж┐ржирж┐ржЯрзЗ рж░рж╛ржи ржХрж░ржмрзЗ
schedule.every(CHECK_INTERVAL).minutes.do(check_new_videos)

print("ЁЯЪА Worker ржЪрж╛рж▓рзБ рж╣рж▓рзЛ!")
print(f"тЮбя╕П ржкрзНрж░ржержо ржмрж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗржЗ ржЪрзЗржХ ржжрзЗржУрзЯрж╛ рж╣рж▓рзЛред")
print(f"тЮбя╕П ржПрж░ржкрж░ ржкрзНрж░рждрж┐ {CHECK_INTERVAL} ржорж┐ржирж┐ржЯрзЗ ржЪрзЗржХ рж╣ржмрзЗред")
print("тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ")

while True:
    schedule.run_pending()
    time.sleep(5)
