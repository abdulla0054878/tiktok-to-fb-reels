import os
import time
import schedule
from yt_dlp import YoutubeDL
from fb_post import post_video_file

# ENV ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá
TIKTOK_PROFILE = os.getenv("TIKTOK_PROFILE")
CHECK_INTERVAL = int(os.getenv("CRON_INTERVAL_MINUTES", "5"))

if not TIKTOK_PROFILE:
    raise RuntimeError("‚ùå 'TIKTOK_PROFILE' variable Railway-‡¶§‡ßá ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡¶®‡¶ø!")

seen_ids = set()

def check_new_tiktok_videos():
    print("üîç Checking TikTok profile:", TIKTOK_PROFILE)
    try:
        ydl_opts = {"extract_flat": True, "quiet": True, "skip_download": True}
        with YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(TIKTOK_PROFILE, download=False)
            entries = info.get("entries", [])
            if not entries:
                print("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø")
                return

            latest = entries[0]
            vid_id = latest.get("id")
            url = latest.get("url")
            title = latest.get("title", "")

            if not vid_id or vid_id in seen_ids:
                print("‚è≥ ‡¶è‡¶ñ‡¶®‡¶ì ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶∏‡ßá‡¶®‡¶ø")
                return

            print("‚ú® ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶õ‡ßá:", url)
            seen_ids.add(vid_id)

            # Download to temp
            filepath = f"/tmp/{vid_id}.mp4"
            dl_opts = {"outtmpl": filepath, "format": "mp4"}
            with YoutubeDL(dl_opts) as ydl2:
                ydl2.download([url])
            print("üì• ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡ßü‡ßá‡¶õ‡ßá:", filepath)

            # FB Upload
            fb_res = post_video_file(filepath, title=title, description="")
            print("üìò Posted to Facebook:", fb_res)

            os.remove(filepath)
            print("üßπ Temp file deleted:", filepath)

    except Exception as e:
        print("‚ùå Error:", str(e))

schedule.every(CHECK_INTERVAL).minutes.do(check_new_tiktok_videos)
print(f"üöÄ TikTok Worker started for profile: {TIKTOK_PROFILE}, interval: {CHECK_INTERVAL} min")

while True:
    schedule.run_pending()
    time.sleep(5)
